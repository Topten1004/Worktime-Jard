// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Worktime.Models;

#nullable disable

namespace Worktime.Migrations
{
    [DbContext(typeof(WorktimeDbContext))]
    [Migration("20230810050326_addTypeEnable")]
    partial class addTypeEnable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Worktime.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<bool>("Enable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Enable");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("EntryDate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LastName");

                    b.Property<string>("SSN")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("SSN");

                    b.Property<string>("Tag")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("TAG");

                    b.Property<bool>("WebAccess")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("WebAccess");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Worktime.Models.Passage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeId");

                    b.Property<DateTime>("LogTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LogTime");

                    b.Property<int>("PointerId")
                        .HasColumnType("int")
                        .HasColumnName("PointerId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PointerId");

                    b.ToTable("Passage");
                });

            modelBuilder.Entity("Worktime.Models.Pointer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Pointer");
                });

            modelBuilder.Entity("Worktime.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("LastName");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Login");

                    b.Property<string>("Mdp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("MDP");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Role");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Worktime.Models.Passage", b =>
                {
                    b.HasOne("Worktime.Models.Employee", "Employee")
                        .WithMany("Passages")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Worktime.Models.Pointer", "Pointer")
                        .WithMany("Passages")
                        .HasForeignKey("PointerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Pointer");
                });

            modelBuilder.Entity("Worktime.Models.Employee", b =>
                {
                    b.Navigation("Passages");
                });

            modelBuilder.Entity("Worktime.Models.Pointer", b =>
                {
                    b.Navigation("Passages");
                });
#pragma warning restore 612, 618
        }
    }
}
